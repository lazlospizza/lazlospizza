/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LazlosPizzas,
  LazlosPizzasInterface,
} from "../../contracts/LazlosPizzas";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baker",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint16",
            name: "base",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "sauce",
            type: "uint16",
          },
          {
            internalType: "uint16[3]",
            name: "cheeses",
            type: "uint16[3]",
          },
          {
            internalType: "uint16[4]",
            name: "meats",
            type: "uint16[4]",
          },
          {
            internalType: "uint16[4]",
            name: "toppings",
            type: "uint16[4]",
          },
        ],
        internalType: "struct Pizza",
        name: "pizzaData",
        type: "tuple",
      },
    ],
    name: "bake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numPizzas",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "pizza",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "base",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "sauce",
            type: "uint16",
          },
          {
            internalType: "uint16[3]",
            name: "cheeses",
            type: "uint16[3]",
          },
          {
            internalType: "uint16[4]",
            name: "meats",
            type: "uint16[4]",
          },
          {
            internalType: "uint16[4]",
            name: "toppings",
            type: "uint16[4]",
          },
        ],
        internalType: "struct Pizza",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pizzaShopContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "pizzaTokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint16",
            name: "base",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "sauce",
            type: "uint16",
          },
          {
            internalType: "uint16[3]",
            name: "cheeses",
            type: "uint16[3]",
          },
          {
            internalType: "uint16[4]",
            name: "meats",
            type: "uint16[4]",
          },
          {
            internalType: "uint16[4]",
            name: "toppings",
            type: "uint16[4]",
          },
        ],
        internalType: "struct Pizza",
        name: "pizzaData",
        type: "tuple",
      },
    ],
    name: "rebake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "setPizzaShopContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600d81526020017f4c617a6c6f27732050697a7a61000000000000000000000000000000000000008152506040518060400160405280600581526020017f4c415a4c4f000000000000000000000000000000000000000000000000000000815250816000908051906020019062000096929190620001a6565b508060019080519060200190620000af929190620001a6565b505050620000d2620000c6620000d860201b60201c565b620000e060201b60201c565b620002bb565b600033905090565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001b49062000285565b90600052602060002090601f016020900481019282620001d8576000855562000224565b82601f10620001f357805160ff191683800117855562000224565b8280016001018555821562000224579182015b828111156200022357825182559160200191906001019062000206565b5b50905062000233919062000237565b5090565b5b808211156200025257600081600090555060010162000238565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200029e57607f821691505b60208210811415620002b557620002b462000256565b5b50919050565b612dda80620002cb6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063715018a6116100b8578063b88d4fde1161007c578063b88d4fde14610363578063c87b56dd1461037f578063e985e9c5146103af578063ea131c28146103df578063f2fde38b1461040f578063fd9f80051461042b57610142565b8063715018a6146102e3578063795c0a4b146102ed5780638da5cb5b1461030b57806395d89b4114610329578063a22cb4651461034757610142565b80630aa71aa01161010a5780630aa71aa0146101fd57806323b872dd1461022d5780634103693c1461024957806342842e0e146102675780636352211e1461028357806370a08231146102b357610142565b806301ffc9a7146101475780630452d8ed1461017757806306fdde0314610193578063081812fc146101b1578063095ea7b3146101e1575b600080fd5b610161600480360381019061015c9190611e5e565b610447565b60405161016e9190611ea6565b60405180910390f35b610191600480360381019061018c9190611f1f565b6104d9565b005b61019b610599565b6040516101a89190611fe5565b60405180910390f35b6101cb60048036038101906101c6919061203d565b610627565b6040516101d89190612079565b60405180910390f35b6101fb60048036038101906101f69190612094565b61065a565b005b6102176004803603810190610212919061203d565b610843565b604051610224919061227b565b60405180910390f35b61024760048036038101906102429190612297565b6109f7565b005b610251610df7565b60405161025e91906122f9565b60405180910390f35b610281600480360381019061027c9190612297565b610e03565b005b61029d6004803603810190610298919061203d565b610f4a565b6040516102aa9190612079565b60405180910390f35b6102cd60048036038101906102c89190611f1f565b610f7d565b6040516102da91906122f9565b60405180910390f35b6102eb610f95565b005b6102f561101d565b6040516103029190612079565b60405180910390f35b610313611043565b6040516103209190612079565b60405180910390f35b61033161106d565b60405161033e9190611fe5565b60405180910390f35b610361600480360381019061035c9190612340565b6110fb565b005b61037d600480360381019061037891906123e5565b6111f8565b005b6103996004803603810190610394919061203d565b611345565b6040516103a69190611fe5565b60405180910390f35b6103c960048036038101906103c4919061246d565b61135e565b6040516103d69190611ea6565b60405180910390f35b6103f960048036038101906103f49190612749565b61138d565b60405161040691906122f9565b60405180910390f35b61042960048036038101906104249190611f1f565b6114f0565b005b6104456004803603810190610440919061278a565b6115e8565b005b60006301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104a257506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104d25750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6104e16117c3565b73ffffffffffffffffffffffffffffffffffffffff166104ff611043565b73ffffffffffffffffffffffffffffffffffffffff1614610555576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054c9061282a565b60405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080546105a690612879565b80601f01602080910402602001604051908101604052809291908181526020018280546105d290612879565b801561061f5780601f106105f45761010080835404028352916020019161061f565b820191906000526020600020905b81548152906001019060200180831161060257829003601f168201915b505050505081565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806107525750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610791576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610788906128f7565b60405180910390fd5b826004600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b61084b611c0e565b600960008381526020019081526020016000206040518060a00160405290816000820160009054906101000a900461ffff1661ffff1661ffff1681526020016000820160029054906101000a900461ffff1661ffff1661ffff1681526020016001820160038060200260405190810160405280929190826003801561090d576020028201916000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116108d45790505b505050505081526020016002820160048060200260405190810160405280929190826004801561097a576020028201916000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116109415790505b50505050508152602001600382016004806020026040519081016040528092919082600480156109e7576020028201916000905b82829054906101000a900461ffff1661ffff16815260200190600201906020826001010492830192600103820291508084116109ae5790505b5050505050815250509050919050565b6003600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610a98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8f90612963565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610b08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aff906129cf565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610bc85750600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b80610c3157506004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610c70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c67906128f7565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600190039190505550600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60088060000154905081565b610e0e8383836109f7565b60008273ffffffffffffffffffffffffffffffffffffffff163b1480610f06575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a023386856040518463ffffffff1660e01b8152600401610e9393929190612a26565b602060405180830381600087803b158015610ead57600080fd5b505af1158015610ec1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee59190612a85565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b610f45576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3c90612afe565b60405180910390fd5b505050565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b610f9d6117c3565b73ffffffffffffffffffffffffffffffffffffffff16610fbb611043565b73ffffffffffffffffffffffffffffffffffffffff1614611011576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110089061282a565b60405180910390fd5b61101b60006117cb565b565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001805461107a90612879565b80601f01602080910402602001604051908101604052809291908181526020018280546110a690612879565b80156110f35780601f106110c8576101008083540402835291602001916110f3565b820191906000526020600020905b8154815290600101906020018083116110d657829003601f168201915b505050505081565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111ec9190611ea6565b60405180910390a35050565b6112038585856109f7565b60008473ffffffffffffffffffffffffffffffffffffffff163b14806112ff575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168473ffffffffffffffffffffffffffffffffffffffff1663150b7a0233888787876040518663ffffffff1660e01b815260040161128c959493929190612b5a565b602060405180830381600087803b1580156112a657600080fd5b505af11580156112ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112de9190612a85565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b61133e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133590612afe565b60405180910390fd5b5050505050565b6060604051806020016040528060008152509050919050565b60056020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461141f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141690612c1a565b60405180910390fd5b6114296008611891565b600061143560086118a7565b9050826009600083815260200190815260200160002060008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a81548161ffff021916908361ffff1602179055506040820151816001019060036114a8929190611c57565b506060820151816002019060046114c0929190611cf4565b506080820151816003019060046114d8929190611cf4565b509050506114e684826118b5565b8091505092915050565b6114f86117c3565b73ffffffffffffffffffffffffffffffffffffffff16611516611043565b73ffffffffffffffffffffffffffffffffffffffff161461156c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115639061282a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156115dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d390612cac565b60405180910390fd5b6115e5816117cb565b50565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611678576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166f90612c1a565b60405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611719576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171090612d18565b60405180910390fd5b806009600084815260200190815260200160002060008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a81548161ffff021916908361ffff16021790555060408201518160010190600361178a929190611c57565b506060820151816002019060046117a2929190611cf4565b506080820151816003019060046117ba929190611cf4565b50905050505050565b600033905090565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6001816000016000828254019250508190555050565b600081600001549050919050565b6118bf82826119fb565b60008273ffffffffffffffffffffffffffffffffffffffff163b14806119b8575063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168273ffffffffffffffffffffffffffffffffffffffff1663150b7a02336000856040518463ffffffff1660e01b815260040161194593929190612a26565b602060405180830381600087803b15801561195f57600080fd5b505af1158015611973573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119979190612a85565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b6119f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119ee90612afe565b60405180910390fd5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a6b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a62906129cf565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611b0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0490612d84565b60405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6040518060a00160405280600061ffff168152602001600061ffff168152602001611c37611d91565b8152602001611c44611db3565b8152602001611c51611db3565b81525090565b826003600f01601090048101928215611ce35791602002820160005b83821115611cb357835183826101000a81548161ffff021916908361ffff1602179055509260200192600201602081600101049283019260010302611c73565b8015611ce15782816101000a81549061ffff0219169055600201602081600101049283019260010302611cb3565b505b509050611cf09190611dd5565b5090565b826004600f01601090048101928215611d805791602002820160005b83821115611d5057835183826101000a81548161ffff021916908361ffff1602179055509260200192600201602081600101049283019260010302611d10565b8015611d7e5782816101000a81549061ffff0219169055600201602081600101049283019260010302611d50565b505b509050611d8d9190611dd5565b5090565b6040518060600160405280600390602082028036833780820191505090505090565b6040518060800160405280600490602082028036833780820191505090505090565b5b80821115611dee576000816000905550600101611dd6565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611e3b81611e06565b8114611e4657600080fd5b50565b600081359050611e5881611e32565b92915050565b600060208284031215611e7457611e73611dfc565b5b6000611e8284828501611e49565b91505092915050565b60008115159050919050565b611ea081611e8b565b82525050565b6000602082019050611ebb6000830184611e97565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611eec82611ec1565b9050919050565b611efc81611ee1565b8114611f0757600080fd5b50565b600081359050611f1981611ef3565b92915050565b600060208284031215611f3557611f34611dfc565b5b6000611f4384828501611f0a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611f86578082015181840152602081019050611f6b565b83811115611f95576000848401525b50505050565b6000601f19601f8301169050919050565b6000611fb782611f4c565b611fc18185611f57565b9350611fd1818560208601611f68565b611fda81611f9b565b840191505092915050565b60006020820190508181036000830152611fff8184611fac565b905092915050565b6000819050919050565b61201a81612007565b811461202557600080fd5b50565b60008135905061203781612011565b92915050565b60006020828403121561205357612052611dfc565b5b600061206184828501612028565b91505092915050565b61207381611ee1565b82525050565b600060208201905061208e600083018461206a565b92915050565b600080604083850312156120ab576120aa611dfc565b5b60006120b985828601611f0a565b92505060206120ca85828601612028565b9150509250929050565b600061ffff82169050919050565b6120eb816120d4565b82525050565b600060039050919050565b600081905092915050565b6000819050919050565b600061211d83836120e2565b60208301905092915050565b6000602082019050919050565b61213f816120f1565b61214981846120fc565b925061215482612107565b8060005b8381101561218557815161216c8782612111565b965061217783612129565b925050600181019050612158565b505050505050565b600060049050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b6121c38161218d565b6121cd8184612198565b92506121d8826121a3565b8060005b838110156122095781516121f08782612111565b96506121fb836121ad565b9250506001810190506121dc565b505050505050565b6101a08201600082015161222860008501826120e2565b50602082015161223b60208501826120e2565b50604082015161224e6040850182612136565b50606082015161226160a08501826121ba565b5060808201516122756101208501826121ba565b50505050565b60006101a0820190506122916000830184612211565b92915050565b6000806000606084860312156122b0576122af611dfc565b5b60006122be86828701611f0a565b93505060206122cf86828701611f0a565b92505060406122e086828701612028565b9150509250925092565b6122f381612007565b82525050565b600060208201905061230e60008301846122ea565b92915050565b61231d81611e8b565b811461232857600080fd5b50565b60008135905061233a81612314565b92915050565b6000806040838503121561235757612356611dfc565b5b600061236585828601611f0a565b92505060206123768582860161232b565b9150509250929050565b600080fd5b600080fd5b600080fd5b60008083601f8401126123a5576123a4612380565b5b8235905067ffffffffffffffff8111156123c2576123c1612385565b5b6020830191508360018202830111156123de576123dd61238a565b5b9250929050565b60008060008060006080868803121561240157612400611dfc565b5b600061240f88828901611f0a565b955050602061242088828901611f0a565b945050604061243188828901612028565b935050606086013567ffffffffffffffff81111561245257612451611e01565b5b61245e8882890161238f565b92509250509295509295909350565b6000806040838503121561248457612483611dfc565b5b600061249285828601611f0a565b92505060206124a385828601611f0a565b9150509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6124ea82611f9b565b810181811067ffffffffffffffff82111715612509576125086124b2565b5b80604052505050565b600061251c611df2565b905061252882826124e1565b919050565b612536816120d4565b811461254157600080fd5b50565b6000813590506125538161252d565b92915050565b600067ffffffffffffffff821115612574576125736124b2565b5b602082029050919050565b600061259261258d84612559565b612512565b905080602084028301858111156125ac576125ab61238a565b5b835b818110156125d557806125c18882612544565b8452602084019350506020810190506125ae565b5050509392505050565b600082601f8301126125f4576125f3612380565b5b600361260184828561257f565b91505092915050565b600067ffffffffffffffff821115612625576126246124b2565b5b602082029050919050565b600061264361263e8461260a565b612512565b9050806020840283018581111561265d5761265c61238a565b5b835b8181101561268657806126728882612544565b84526020840193505060208101905061265f565b5050509392505050565b600082601f8301126126a5576126a4612380565b5b60046126b2848285612630565b91505092915050565b60006101a082840312156126d2576126d16124ad565b5b6126dc60a0612512565b905060006126ec84828501612544565b600083015250602061270084828501612544565b6020830152506040612714848285016125df565b60408301525060a061272884828501612690565b60608301525061012061273d84828501612690565b60808301525092915050565b6000806101c0838503121561276157612760611dfc565b5b600061276f85828601611f0a565b9250506020612780858286016126bb565b9150509250929050565b60008060006101e084860312156127a4576127a3611dfc565b5b60006127b286828701611f0a565b93505060206127c386828701612028565b92505060406127d4868287016126bb565b9150509250925092565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612814602083611f57565b915061281f826127de565b602082019050919050565b6000602082019050818103600083015261284381612807565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061289157607f821691505b602082108114156128a5576128a461284a565b5b50919050565b7f4e4f545f415554484f52495a4544000000000000000000000000000000000000600082015250565b60006128e1600e83611f57565b91506128ec826128ab565b602082019050919050565b60006020820190508181036000830152612910816128d4565b9050919050565b7f57524f4e475f46524f4d00000000000000000000000000000000000000000000600082015250565b600061294d600a83611f57565b915061295882612917565b602082019050919050565b6000602082019050818103600083015261297c81612940565b9050919050565b7f494e56414c49445f524543495049454e54000000000000000000000000000000600082015250565b60006129b9601183611f57565b91506129c482612983565b602082019050919050565b600060208201905081810360008301526129e8816129ac565b9050919050565b600082825260208201905092915050565b50565b6000612a106000836129ef565b9150612a1b82612a00565b600082019050919050565b6000608082019050612a3b600083018661206a565b612a48602083018561206a565b612a5560408301846122ea565b8181036060830152612a6681612a03565b9050949350505050565b600081519050612a7f81611e32565b92915050565b600060208284031215612a9b57612a9a611dfc565b5b6000612aa984828501612a70565b91505092915050565b7f554e534146455f524543495049454e5400000000000000000000000000000000600082015250565b6000612ae8601083611f57565b9150612af382612ab2565b602082019050919050565b60006020820190508181036000830152612b1781612adb565b9050919050565b82818337600083830152505050565b6000612b3983856129ef565b9350612b46838584612b1e565b612b4f83611f9b565b840190509392505050565b6000608082019050612b6f600083018861206a565b612b7c602083018761206a565b612b8960408301866122ea565b8181036060830152612b9c818486612b2d565b90509695505050505050565b7f4f6e6c79207468652070697a7a612073686f702063616e2063616c6c2074686960008201527f73206d6574686f642e0000000000000000000000000000000000000000000000602082015250565b6000612c04602983611f57565b9150612c0f82612ba8565b604082019050919050565b60006020820190508181036000830152612c3381612bf7565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612c96602683611f57565b9150612ca182612c3a565b604082019050919050565b60006020820190508181036000830152612cc581612c89565b9050919050565b7f42616b657220646f65736e2774206f776e20746869732070697a7a612e000000600082015250565b6000612d02601d83611f57565b9150612d0d82612ccc565b602082019050919050565b60006020820190508181036000830152612d3181612cf5565b9050919050565b7f414c52454144595f4d494e544544000000000000000000000000000000000000600082015250565b6000612d6e600e83611f57565b9150612d7982612d38565b602082019050919050565b60006020820190508181036000830152612d9d81612d61565b905091905056fea264697066735822122021423ae482a9d26bed90c1b8bb01457dfc8a908bafc9746de343df1faaa9fa5664736f6c63430008090033";

type LazlosPizzasConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LazlosPizzasConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LazlosPizzas__factory extends ContractFactory {
  constructor(...args: LazlosPizzasConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LazlosPizzas> {
    return super.deploy(overrides || {}) as Promise<LazlosPizzas>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LazlosPizzas {
    return super.attach(address) as LazlosPizzas;
  }
  override connect(signer: Signer): LazlosPizzas__factory {
    return super.connect(signer) as LazlosPizzas__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LazlosPizzasInterface {
    return new utils.Interface(_abi) as LazlosPizzasInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LazlosPizzas {
    return new Contract(address, _abi, signerOrProvider) as LazlosPizzas;
  }
}
